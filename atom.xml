<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ruru-Front-End-Blog</title>
  
  <subtitle>Ruru 前端筆記</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://yun-ru-tseng.github.io/Ruru-Blog/"/>
  <updated>2020-10-06T16:19:47.656Z</updated>
  <id>https://yun-ru-tseng.github.io/Ruru-Blog/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如何在 Vue component 上使用 v-model</title>
    <link href="https://yun-ru-tseng.github.io/Ruru-Blog/Vue-component-with-v-model/"/>
    <id>https://yun-ru-tseng.github.io/Ruru-Blog/Vue-component-with-v-model/</id>
    <published>2020-10-06T23:55:28.000Z</published>
    <updated>2020-10-06T16:19:47.656Z</updated>
    
    <content type="html"><![CDATA[<p><code>v-model</code> 時常在使用 <code>input</code> 表單元件的 <strong>雙向數據綁定</strong>，其實也可以應用在 component，一起來看看 <code>v-model</code> 如何應用在 component 中吧！</p><a id="more"></a><h2 id="v-model-✐"><a href="#v-model-✐" class="headerlink" title="v-model ✐"></a>v-model ✐</h2><p><code>v-model</code> 作用於表單元件上時，是 <strong>雙向數據綁定</strong> 的語法糖：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"number"</span>&gt;</span></span><br></pre></td></tr></table></figure><p>等價於 <code>v-bind=&quot;number&quot;</code> 以及 <code>@input=&quot;number = $event.target.value&quot;</code> 兩者：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">:value</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">       @<span class="attr">input</span>=<span class="string">"number = $event.target.value"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="component-上使用-v-model-✐"><a href="#component-上使用-v-model-✐" class="headerlink" title="component 上使用 v-model ✐"></a>component 上使用 v-model ✐</h2><p>不作用於表單元件，而是作用於 component 時，則下列程式碼：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-component</span> <span class="attr">v-model</span>=<span class="string">"number"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>等價於：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">my-component</span> <span class="attr">:value</span>=<span class="string">"number"</span></span></span><br><span class="line"><span class="tag">              @<span class="attr">input</span>=<span class="string">"number = $event"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>若是需要在組件使用 <code>v-model</code> 語法，組件需要設定 <code>prop</code>、<code>自定義事件</code>：</p><p><img src="https://i.imgur.com/rcaefRJ.gif" alt="v-model with component"></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 子組件</span></span><br><span class="line">Vue.component(<span class="string">"my-component"</span>, &#123;</span><br><span class="line">  props: [<span class="string">"value"</span>],</span><br><span class="line">  template: <span class="string">`&lt;input :value="value" @input="$emit('input', $event.target.value)"&gt;`</span></span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 父組件</span></span><br><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">".app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    number: <span class="number">0</span></span><br><span class="line">  &#125;,</span><br><span class="line">  template: <span class="string">`</span></span><br><span class="line"><span class="string">&lt;div class="app"&gt;</span></span><br><span class="line"><span class="string">  &lt;my-component v-model="number"/&gt;</span></span><br><span class="line"><span class="string">  &lt;p&gt;&#123;&#123; number &#125;&#125;&lt;/p&gt;</span></span><br><span class="line"><span class="string">&lt;/div&gt;`</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://codepen.io/yunru1230/pen/PozYXgW?editors=1011" target="_blank" rel="noopener">codepen example</a></p></blockquote><p>上方程式碼配合 <code>v-model</code> 進行如下設定，便可以將數據自 <code>父組件</code> 傳入 <code>子組件</code>，<code>子組件</code> 也可以透過 <code>自定義事件</code> 拋出數據給 <code>父組件</code>：</p><ul><li>在 <code>子組件</code> 註冊名為 <code>value</code> 的 <code>prop</code></li><li><code>子組件</code> 在 <code>input</code> 觸發時需定義自定義事件 <code>input</code>，並且設置要傳出的 <code>子組件</code> 數據</li></ul><h3 id="參考資料："><a href="#參考資料：" class="headerlink" title="參考資料："></a>參考資料：</h3><ol><li><a href="https://vuejs.org/v2/guide/index.html" target="_blank" rel="noopener">Vuejs.org 2.x</a></li><li><a href="https://www.youtube.com/watch?v=dw2oFaLu5II" target="_blank" rel="noopener"> 想入門，我陪你  Re Vue 重頭說起｜Day 11：組件自定事件與通知 - YouTube</a></li><li><a href="https://dwatow.github.io/2018/09-21-vuejs/vue-component-with-v-model/" target="_blank" rel="noopener">Vue Component 也可以用 v-model - 《Chris 技術筆記》</a></li><li><a href="https://paulund.co.uk/use-v-model-on-custom-vue-component#:~:text=The%20v%2Dmodel%20attribute%20is,to%20record%20the%20user%20input." target="_blank" rel="noopener">Use v-model On Custom Vue Component - Paulund</a></li></ol>]]></content>
    
    <summary type="html">
    
      customizing component v-model
    
    </summary>
    
    
    
      <category term="v-model, vue, component" scheme="https://yun-ru-tseng.github.io/Ruru-Blog/tags/v-model-vue-component/"/>
    
  </entry>
  
  <entry>
    <title>Github Dependabot alerts 介紹</title>
    <link href="https://yun-ru-tseng.github.io/Ruru-Blog/Github-Dependabot-alerts/"/>
    <id>https://yun-ru-tseng.github.io/Ruru-Blog/Github-Dependabot-alerts/</id>
    <published>2020-10-04T13:27:47.000Z</published>
    <updated>2020-10-04T12:02:55.773Z</updated>
    
    <content type="html"><![CDATA[<p>在使用 github 時，有時候在項目中會收到 Dependabot alerts <strong>安全警報</strong>，在下列 <code>security</code> <code>Dependabot alerts</code> 中，會有如下列的 Dependabot alerts 警告項目，這個警告其實是 Github 在安全性上的功能之一。</p><a id="more"></a><p>進入 <code>security</code> 中，可以看到 <code>Dependabot alerts</code><br><img src="https://i.imgur.com/569XT0S.jpg" alt=""></p><p>那麼先來看 Github <a href="https://docs.github.com/en/free-pro-team@latest/github/managing-security-vulnerabilities/about-alerts-for-vulnerable-dependencies" target="_blank" rel="noopener">官網</a>上關於 Dependabot alerts 的描述：</p><blockquote><p>GitHub detects and alerts users to vulnerable dependencies in public repositories by default. Owners of private repositories, or people with admin access, can enable GitHub Dependabot alerts by enabling the dependency graph and GitHub Dependabot alerts for their repositories.</p></blockquote><p>簡單來說，這個功能來源於 <strong>Github</strong> 2017 推出的安全警報功能，默認情況下可以自動掃描公共庫（私有庫不會，要額外開啟設定）中的依賴項目，例如 <code>lodash</code> 等，並且查詢相關的依賴項目是否有任何漏洞，一旦發現便會通過 <strong>自動通知</strong> 向用戶發出警告。</p><h2 id="Dependabot-alerts-檢測："><a href="#Dependabot-alerts-檢測：" class="headerlink" title="Dependabot alerts 檢測："></a>Dependabot alerts 檢測：</h2><p>對於依賴項目檢測到以下情況 Github 會發出 Dependabot alerts：</p><table><thead><tr><th>情況</th></tr></thead><tbody><tr><td>A new vulnerability is added to the GitHub Advisory Database. For more information, see “ Browsing security vulnerabilities in the GitHub Advisory Database.”</td></tr><tr><td>New vulnerability data from WhiteSource is processed.</td></tr><tr><td>The dependency graph for a repository changes. For example, when a contributor pushes a commit to change the packages or versions it depends on, or when the code of one of the dependencies changes. For more information, see “ About the dependency graph.”</td></tr></tbody></table><h2 id="如何解決-Dependabot-alerts"><a href="#如何解決-Dependabot-alerts" class="headerlink" title="如何解決 Dependabot alerts"></a>如何解決 Dependabot alerts</h2><p>項目的 Dependabot alerts 解決的最簡單方式，Github 也有提供，在 Dependabot alerts 發送同時，也同時發送了可以解決依賴項目漏洞的最低版本更新的 (minimum ver) <code>pull request</code>，以我的項目為例，點擊進入 Dependabot alerts 後，可以看到相關的 alert，我們選擇 <code>lodash</code> 進入</p><p><img src="https://i.imgur.com/zbhj8K0.jpg" alt=""></p><p>點擊進入後可以看到 Dependabot alerts 提供的 <code>pull request</code> <strong>Bump lodash from 4.17.15 to 4.17.19</strong>，透過 <code>merge</code> 該 <code>request</code>，該漏洞便能解決。裡面詳細記錄了漏洞問題。<br><img src="https://i.imgur.com/XrGbD5M.jpg" alt=""></p><div class="danger">有時候會遇到 alert 沒有自動提 <code>pull request</code> 的情況。這個時候就得依照 alert 給出的提示，找出原因。<img src="https://i.imgur.com/nrGUBuA.jpg">點擊進入後會有詳細介紹：以本範例來說，Dependabot alerts 無法提 <code>pull request</code> 的原因是由於其他依賴項目的不兼容。<img src="https://i.imgur.com/JHcKEn7.jpg"></div><hr><h2 id="資料來源："><a href="#資料來源：" class="headerlink" title="資料來源："></a>資料來源：</h2><p><a href="https://docs.github.com/en/free-pro-team@latest/github/managing-security-vulnerabilities/about-alerts-for-vulnerable-dependencies" target="_blank" rel="noopener">About alerts for vulnerable dependencies - GitHub Docs</a><br><a href="https://dumbcatnote.blogspot.com/2019/11/github-dependabot-pull-request.html" target="_blank" rel="noopener">Git GitHub Dependabot 自動建立 Pull Request 修正安全性漏洞</a><br><a href="https://www.infoq.com/news/2017/11/githhub-security-alerts/" target="_blank" rel="noopener">GitHub Launches Security Alerts</a></p>]]></content>
    
    <summary type="html">
    
      Github 上的 Dependabot alerts 是什麼？在使用 github 時，有時候在項目中會收到 Dependabot alerts 安全警報，在下列 security Dependabot alerts 中，會有如下列的 Dependabot alerts 警告項目，這個警告其實是 Github 在安全性上的功能之一。
    
    </summary>
    
    
    
      <category term="github, Dependabot ,Dependabot alert" scheme="https://yun-ru-tseng.github.io/Ruru-Blog/tags/github-Dependabot-Dependabot-alert/"/>
    
  </entry>
  
</feed>
