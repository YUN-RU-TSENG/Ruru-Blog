<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ruru-Front-End-Blog</title>
  
  <subtitle>Ruru Front-End-note</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/YUN-RU-TSENG/"/>
  <updated>2020-07-05T18:00:35.706Z</updated>
  <id>https://github.com/YUN-RU-TSENG/</id>
  
  <author>
    <name>[object Object]</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>初探網路基礎：IP、DNS、HTTP request</title>
    <link href="https://github.com/YUN-RU-TSENG/archives/2020/07/%E5%88%9D%E6%8E%A2-Internet-%E5%9F%BA%E7%A4%8E%EF%BC%9AIP%E3%80%81DNS%E3%80%81HTTP-request/"/>
    <id>https://github.com/YUN-RU-TSENG/archives/2020/07/%E5%88%9D%E6%8E%A2-Internet-%E5%9F%BA%E7%A4%8E%EF%BC%9AIP%E3%80%81DNS%E3%80%81HTTP-request/</id>
    <published>2020-07-06T01:37:41.000Z</published>
    <updated>2020-07-05T18:00:35.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Internet-Protocol"><a href="#Internet-Protocol" class="headerlink" title="Internet Protocol"></a>Internet Protocol</h2><p>Internet Protocol，是一項網路協議，該協議的重點為 IP 位址，IP 位址是每個在 Internet 中的設備所擁有的唯一位址，通過這個位址我們可以輕鬆的找到其他的設備，不過 IP 位址、Internet 究竟是如何幫助我們在如今便捷的遨遊於網路世界呢？</p><h4 id="IP-位址"><a href="#IP-位址" class="headerlink" title="IP 位址"></a>IP 位址</h4><p><img src="https://images.pexels.com/photos/826349/pexels-photo-826349.jpeg?cs=srgb&dl=pexels-826349.jpg&fm=jpg" alt="https://images.pexels.com/photos/826349/pexels-photo-826349.jpeg?cs=srgb&amp;dl=pexels-826349.jpg&amp;fm=jpg"></p><p>今天拿起手機上網，手機會先通過 wi-fi、基地台，接著透過地底、海底的光纖電纜來傳輸網路訊號，最終到達用戶需要連上的 server 端，在這過程透過所謂的 IP 位址來找到用戶所搜尋的網站所在的主機，由於 IP 位址是唯一的，所以可以確保用戶知道了 IP 位址，便可以到達想找的設備，而 server 端也可以由發送請求的的設備唯一 IP 位址來找到設備，返回回應。</p><h4 id="DNS"><a href="#DNS" class="headerlink" title="DNS"></a>DNS</h4><p>這便是 IP 位址所幫助我們的，不過 IP 位址由於由多碼數字構成，通常我們並不習慣記憶使用，我們更常使用比如 <code>google.com</code> 、 <code>ruru.com</code> 等 Domain 名稱，不過如何使用 Domain 來找到唯一位址呢？別擔心，這時候該 Domain 便可以透過 DNS 系統查詢到他所對應的 IP，Google public DNS 便是由 google 所提供的免費域名解析服務器。目前世界的域名、IP 位址等，由 <a href="https://www.icann.org/get-started" target="_blank" rel="noopener">ICANN</a> 進行管理。</p><h2 id="WWW"><a href="#WWW" class="headerlink" title="WWW"></a>WWW</h2><p>World Wide Web</p><p><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/b/b2/WWW_logo_by_Robert_Cailliau.svg/250px-WWW_logo_by_Robert_Cailliau.svg.png" alt="Internet%20IP%20DNS%20HTTP%20request%20fcd5d8bdc0eb4f4ca3597f0424f94baa/Untitled.png"></p><p>萬維網基於 Internet，萬維網由數以萬計的網頁超文本所構成，每個資源都有其唯一的 URL，通過 HTTP 協議可以使每個用戶得以查閱這些資料，注意他和 Internet 並不相同，他是基於 Internet 所提供的一項服務，也就是我們如今習慣使用的網頁。</p><h2 id="HTTP"><a href="#HTTP" class="headerlink" title="HTTP"></a>HTTP</h2><p>HyperText Transfer Protocol</p><p>HTTP 制定了在萬維網上，client 端請求、server 端回應的一套應答標準。</p><p>我們在上網自輸入網址到進入網頁，會歷經幾項步驟：</p><ol><li>透過 DNS 解析網址成 IP 位址，找到 server</li><li>打開 TCP 連接</li><li>browser 發送請求，送出 HTTP Message，請求 HTTP 資源</li><li>server 發送回應，收到回應 Message</li><li>關閉 TCP 連接或重新請求連接</li></ol><h2 id="HTTP-Message"><a href="#HTTP-Message" class="headerlink" title="HTTP Message"></a>HTTP Message</h2><p>是發送請求以及回應時所附帶的訊息，分為兩種類型，一是請求、二是回應。</p><h4 id="請求範例"><a href="#請求範例" class="headerlink" title="請求範例"></a>請求範例</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">POST /test/demo_form.php HTTP/<span class="number">1.1</span></span><br><span class="line">Host: w3schools.com</span><br><span class="line">name1=value1&amp;name2=value2</span><br></pre></td></tr></table></figure><p>構成：</p><ul><li>請求的方法</li><li>請求的路徑</li><li>HTTP 版本</li><li>用於附加訊息的 header</li><li>body（不是所有請求都有，有附加資源的 POST 有 body，GET 則無）</li></ul><h2 id="請求方法"><a href="#請求方法" class="headerlink" title="請求方法"></a>請求方法</h2><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/GET" target="_blank" rel="noopener">GET</a></p><p>GET 方法請求一個指定資源的表示形式. 使用GET的請求應該只被用於獲取數據.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/HEAD" target="_blank" rel="noopener">HEAD</a></p><p>HEAD 方法請求一個與 GET 請求的響應相同的響應，但沒有響應體.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/POST" target="_blank" rel="noopener">POST</a></p><p>POST 方法用於將實體提交到指定的資源，通常導致在服務器上的狀態變化或副作用.</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PUT" target="_blank" rel="noopener">PUT</a></p><p>PUT 方法用請求有效載荷替換目標資源的所有當前表示。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/DELETE" target="_blank" rel="noopener">DELETE</a></p><p>DELETE 方法刪除指定的資源。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/CONNECT" target="_blank" rel="noopener">CONNECT</a></p><p>CONNECT 方法建立一個到由目標資源標識的服務器的隧道。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/OPTIONS" target="_blank" rel="noopener">OPTIONS</a></p><p>OPTIONS 方法用於描述目標資源的通信選項。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/TRACE" target="_blank" rel="noopener">TRACE</a></p><p>TRACE 方法沿著到目標資源的路徑執行一個消息環回測試。</p><p><a href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Methods/PATCH" target="_blank" rel="noopener">PATCH</a></p><p>PATCH 方法用於對資源應用部分修改。</p><h4 id="回應範例："><a href="#回應範例：" class="headerlink" title="回應範例："></a>回應範例：</h4><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Request URL: https:<span class="comment">//developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview</span></span><br><span class="line">Request Method: GET</span><br><span class="line">Status Code: <span class="number">200</span></span><br><span class="line">Remote Address: <span class="number">13.35</span><span class="number">.34</span><span class="number">.105</span>:<span class="number">443</span></span><br><span class="line">Referrer Policy: no-referrer-when-downgrade</span><br><span class="line"></span><br><span class="line"><span class="comment">// response header</span></span><br><span class="line">access-control-allow-origin: *</span><br><span class="line">cache-control: public, max-age=<span class="number">0</span>, s-maxage=<span class="number">300</span></span><br><span class="line">content-encoding: gzip</span><br><span class="line">content-language: zh-CN</span><br><span class="line">content-type: text/html; charset=utf<span class="number">-8</span></span><br><span class="line">date: Sun, <span class="number">05</span> Jul <span class="number">2020</span> <span class="number">17</span>:<span class="number">19</span>:<span class="number">53</span> GMT</span><br><span class="line">server: gunicorn/<span class="number">20.0</span><span class="number">.4</span></span><br><span class="line">status: <span class="number">200</span></span><br><span class="line">strict-transport-security: max-age=<span class="number">63072000</span></span><br><span class="line">vary: Accept-Encoding,Cookie</span><br><span class="line">via: <span class="number">1.1</span> <span class="number">2e9008</span>ee05c2ff9176001baad802fed7.cloudfront.net (CloudFront)</span><br><span class="line">x-amz-cf-id: <span class="number">8</span>IK13Gpcn3UkW4ELAV9iH1cHe_9ywxJ085CpDY9r259uMmnvq1nkJw==</span><br><span class="line">x-amz-cf-pop: TPE51-C1</span><br><span class="line">x-cache: Miss <span class="keyword">from</span> cloudfront</span><br><span class="line">x-content-type-options: nosniff</span><br><span class="line">x-frame-options: DENY</span><br><span class="line">x-kuma-revision: <span class="number">1589288</span></span><br><span class="line">x-xss-protection: <span class="number">1</span>; mode=block</span><br></pre></td></tr></table></figure><p>構成：</p><ul><li>HTTP 版本</li><li>狀態碼</li><li>狀態訊息</li><li>HTTP header</li><li>獲取資源的 body</li></ul><h2 id="狀態碼含義"><a href="#狀態碼含義" class="headerlink" title="狀態碼含義"></a>狀態碼含義</h2><p>表示 HTTP 請求是否完成，以及回應狀態。</p><p><code>100</code> - <code>199</code> 信息響應，這一類型的狀態碼，代表請求已被接受，需要繼續處理。</p><p><code>200</code> - <code>299</code> 成功響應，這一類型的狀態碼，代表請求已成功被伺服器接收、理解、並接受。</p><p><code>300</code> - <code>399</code> 重新定向。這類狀態碼代表需要客戶端採取進一步的操作才能完成請求。通常，這些狀態碼用來重新導向</p><p><code>400</code> - <code>499</code> 客戶端錯誤。這類的狀態碼代表了客戶端看起來可能發生了錯誤，妨礙了伺服器的處理。</p><p><code>500</code> - <code>599</code> 服務器錯誤。表示伺服器無法完成明顯有效的請求。</p><hr><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>以上整理了網頁基礎相關的內容，簡單介紹了 DNS、HTTP ，下次見 ^^</p><p>若有錯誤歡迎指正，謝謝你。</p><hr><h2 id="資料來源"><a href="#資料來源" class="headerlink" title="資料來源"></a>資料來源</h2><p><a href="https://youtu.be/5o8CwafCxnU" target="_blank" rel="noopener">The Internet: IP Addresses &amp; DNS</a><br><a href="https://www.youtube.com/watch?v=jZOg39v73c4&list=PLuUdFsbOK_8pWzW7KJjbiJ8Ow0cdHlApV&t=0s" target="_blank" rel="noopener">Optical fiber cables, how do they work? | ICT #3</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Overview" target="_blank" rel="noopener">MDN-HTTP</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Internet-Protocol&quot;&gt;&lt;a href=&quot;#Internet-Protocol&quot; class=&quot;headerlink&quot; title=&quot;Internet Protocol&quot;&gt;&lt;/a&gt;Internet Protocol&lt;/h2&gt;&lt;p&gt;Internet P
      
    
    </summary>
    
    
    
      <category term="internet" scheme="https://github.com/YUN-RU-TSENG/tags/internet/"/>
    
      <category term="web" scheme="https://github.com/YUN-RU-TSENG/tags/web/"/>
    
      <category term="基礎" scheme="https://github.com/YUN-RU-TSENG/tags/%E5%9F%BA%E7%A4%8E/"/>
    
      <category term="DNS" scheme="https://github.com/YUN-RU-TSENG/tags/DNS/"/>
    
      <category term="HTTP request" scheme="https://github.com/YUN-RU-TSENG/tags/HTTP-request/"/>
    
  </entry>
  
  <entry>
    <title>👶🏻 Vue 初探：Vue.js</title>
    <link href="https://github.com/YUN-RU-TSENG/archives/2020/07/vue%20%E5%88%9D%E6%8E%A2%EF%BC%9AVue.js/"/>
    <id>https://github.com/YUN-RU-TSENG/archives/2020/07/vue%20%E5%88%9D%E6%8E%A2%EF%BC%9AVue.js/</id>
    <published>2020-07-04T17:19:19.000Z</published>
    <updated>2020-07-05T18:01:27.731Z</updated>
    
    <content type="html"><![CDATA[<p>最近在整理 vue 的筆記，也重新看了一遍 vue.org 加深印象以及釐清之前不懂的地方，以下為紀錄筆記，若有錯誤歡迎指正交流，謝謝 😆。</p><a id="more"></a><h5 id="本次內容"><a href="#本次內容" class="headerlink" title="本次內容"></a>本次內容</h5><ol><li>Vue.js 介紹</li><li>聲明式渲染</li><li>條件與循環</li><li>用戶輸入</li></ol><h2 id="Vue-js"><a href="#Vue-js" class="headerlink" title="Vue.js"></a>Vue.js</h2><p>Vue.js 最初由 Evan You 開發，在 <a href="https://www.youtube.com/watch?v=OrxmtDw4pVI" target="_blank" rel="noopener">Vue.js : The Documentary</a> 影片中，他提及最初創建 Vue 的想法：</p><blockquote><p><strong>Originally the goal was really just to provide a super simple focused utility, almost just to sync some Dom with some JavaScript objects. That was the original</strong></p></blockquote><p>意思是希望能夠簡單的同步 DOM 與 JS 物件，單純透過這個 JS 物件 data 改變去驅動 DOM 更新，這個概念又稱為 <code>data-driven view</code> 使用資料去驅動畫面改變，我們可以專注在資料上的操作，使得我們的代碼更容易編寫及維護，減少對於 DOM 元素抓取、操作上的關注。</p><p><img src="https://v1.vuejs.org/images/mvvm.png" alt="https://www.notion.so/Vue-Vue-js-Vue-instance-a93ca4a4bc554f1195067a40b09fed12#be7e68ad3bb04045b5e0c50e0e69111d"></p><blockquote><p>這為 Vue V1 版本的 MVVM 示意圖。V1、V0.11、V2.x 在敘述內容上有些更正與修訂， V2.x 文件指出現在 Vue 雖沒有完全遵守 MVVM 模式，但深受其啟發。</p></blockquote><p>這張圖之中的 ViewModel <em>也就是 Vue instance</em> 包含 DOM Listener、Directive 藉此 View（當發生任何事件）、Model（當發生資料改變） 得以透過它來溝通並及時響應。在 Vue 之中  Vue instance 由建構函式透過 <code>new</code> 方式建立而成。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;...&#125;)</span><br></pre></td></tr></table></figure><h2 id="如何開始使用"><a href="#如何開始使用" class="headerlink" title="如何開始使用"></a>如何開始使用</h2><p>可以使用下列幾種方式安裝：</p><h4 id="1-直接下載整個-Vue-js"><a href="#1-直接下載整個-Vue-js" class="headerlink" title="1. 直接下載整個 Vue.js"></a>1. 直接下載整個 Vue.js</h4><p>可至官網下載，分為開發版本（有完整錯誤警告）以及生產版本（刪除警告，壓縮過），若是在開發階段，建議使用有完整錯誤警告的開發版本。</p><h4 id="2-CDN"><a href="#2-CDN" class="headerlink" title="2. CDN"></a>2. CDN</h4><p>可使用 CDN 引入，同樣分為開發版本、生產版本。</p><p>開發版本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 開發環境版本，包含了有幫助的命令行警告 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue/dist/vue.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>生產版本</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 生產環境版本，優化了尺寸和速度 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.jsdelivr.net/npm/vue"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>開發版本可搭配 devtool 調適：</p><p><img src="https://lh3.googleusercontent.com/fCk-pJXAk4oZd-24-PwLqnPnb-X4R3UbDMW-OvAms-1jJuVYS1x3hpbpPSgvNWbwLeSD3m8z=w128-h128-e365" alt="vue"><br>開發版本可以配合官方的開發工具 <a href="https://chrome.google.com/webstore/detail/vuejs-devtools/nhdogjmejiglipccpnnnanhbledajbpd?hl=en" target="_blank" rel="noopener">vue devTool</a>  進行開發，若是使用生產版本在 Vue 的全局配置對象中， devtool 預設會是 <code>false</code> ，預設模式下無法使用 devtool 開發。（不建議調整為 true 後將生產版本作為開發使用。）</p><h2 id="Declarative-Rendering"><a href="#Declarative-Rendering" class="headerlink" title="Declarative Rendering"></a>Declarative Rendering</h2><p>Vue.js 的核心便是允許採用簡易的模板語法（假如沒有預設 template 則會取所註冊的 element 作為模板），將數據透過聲明 Declarative 的方式渲染進 DOM 系統中，所有在 Vue instance 創建時所包含的數據都是響應式的，一旦數據更新與之聲明相關 DOM 也會相應的更新。</p><h4 id="渲染文字"><a href="#渲染文字" class="headerlink" title="渲染文字"></a>渲染文字</h4><blockquote><p>可點擊前往範例 <a href="https://codepen.io/yunru1230/pen/VweQYva?editors=1010" target="_blank" rel="noopener">渲染文字</a></p></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  <span class="comment">// 這個是 element 也就是 vue instance 掛載的元素，透過選擇器選擇，這裡選的是 id="app"</span></span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello 方胖PD!"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>可以透過添加以下程式碼來查看響應式更新：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello 方胖PD!"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 新增</span></span><br><span class="line">vm.message = <span class="string">"李PD"</span>; <span class="comment">// 畫面文字也更新了</span></span><br></pre></td></tr></table></figure><p>注意：一旦創建了 Vue instance（app） 掛載到元素上後，Vue instance 會掛載到剛剛我們所選定要掛載的元素（#app）上，我們不會再直接與 HTML 交互，而是操作該 Vue instance。</p><h4 id="綁定-HTML-attribute"><a href="#綁定-HTML-attribute" class="headerlink" title="綁定 HTML attribute"></a>綁定 HTML attribute</h4><blockquote><p>可點擊前往範例 <a href="https://codepen.io/yunru1230/pen/qBbxEbd?editors=1010" target="_blank" rel="noopener">綁定 HTML attribute</a></p></blockquote><p>現在知道更改畫面文字的方式了，但是我們可不可以動態的更新 HTML 的 attribute 呢？可以的，這時可以使用 <code>v-bind</code> 來幫這我們做到</p><p><code>v-</code> 開頭指令為 Vue 提供特殊的資料綁定，稱為 <strong>指令</strong> ，例如可以只渲染該元件一次（v-once）、綁定 HTML attribute（v-bind）等。</p><p>我們可以透過 v-bind 將 data 綁定到 HTML attribute 上，下面就綁定了 <code>#app</code> 的 <code>title</code> attribute 。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 添加 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span> <span class="attr">v-bind:title</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line">  &#123;&#123; message &#125;&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello 方PD!"</span>,</span><br><span class="line">    <span class="comment">// 添加</span></span><br><span class="line">    text: <span class="string">"今天你有好好搞 i-land 了嗎？"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="條件與循環"><a href="#條件與循環" class="headerlink" title="條件與循環"></a>條件與循環</h2><h4 id="條件"><a href="#條件" class="headerlink" title="條件"></a>條件</h4><blockquote><p>可點擊前往範例 <a href="https://codepen.io/yunru1230/pen/mdVXdGP" target="_blank" rel="noopener">條件</a></p></blockquote><p>控制一個元素是否會在 render tree 中顯示，可以透過 <code>v-if</code> 指令。 <code>v-if</code> 透過 <code>truthy</code>、<code>falsy</code> 判定，當數值為 <code>truthy</code> 則會渲染元素；反之則不渲染。（關於 <code>truthy</code>、<code>falsy</code> 可見 YDKJS）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span> <span class="attr">v-if</span>=<span class="string">"false"</span>&gt;</span>你看不見<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app"</span>,</span><br><span class="line">  data: &#123;&#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="循環"><a href="#循環" class="headerlink" title="循環"></a>循環</h4><blockquote><p>可點擊前往範例 <a href="https://codepen.io/yunru1230/pen/RwrQNrK" target="_blank" rel="noopener">循環</a></p></blockquote><p>透過使用 <code>v-for</code> 語法，可以渲染 <strong>Array</strong> 到畫面中。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-4"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"todo in todos"</span>&gt;</span></span><br><span class="line">      &#123;&#123; todo.text &#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app-4"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    todos: [</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">"學習 JavaScript"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">"學習 Vue"</span> &#125;,</span><br><span class="line">      &#123; <span class="attr">text</span>: <span class="string">"去看 i-land"</span> &#125;,</span><br><span class="line">    ],</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>當新增資料到數組，會發現列表渲染會隨之更新。</p><figure class="highlight jsx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app4.todos.push(&#123; <span class="attr">text</span>: <span class="string">"新項目"</span> &#125;);</span><br></pre></td></tr></table></figure><h2 id="處理用戶輸入"><a href="#處理用戶輸入" class="headerlink" title="處理用戶輸入"></a>處理用戶輸入</h2><p>當用戶有輸入行為，我們希望透過事件監聽與之交互，可以透過 <code>v-on</code> 指令添加事件監聽器，通過它調用位於 Vue instance 中的 methods。</p><h4 id="事件監聽"><a href="#事件監聽" class="headerlink" title="事件監聽"></a>事件監聽</h4><blockquote><p>可點擊前往範例 <a href="https://codepen.io/yunru1230/pen/NWxyPNY" target="_blank" rel="noopener">事件監聽</a></p></blockquote><p>透過 v-on 我們操作了 DOM 但是沒有真正觸碰到 DOM，我們是使用 Vue instance 去操作。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-5"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"reverseMessage"</span>&gt;</span>反轉消息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app-5"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello Vue.js!"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    reverseMessage: <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">      <span class="keyword">this</span>.message = <span class="keyword">this</span>.message.split(<span class="string">""</span>).reverse().join(<span class="string">""</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="v-model"><a href="#v-model" class="headerlink" title="v-model"></a>v-model</h4><p>Vue 提供了 v-model 這個語法糖，幫我們綁定表單輸入事件監聽以及 data 資料到表單輸入中，可以實現雙向綁定（當輸入更改數據也隨之更改，反之亦然）。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"app-6"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>&#123;&#123; message &#125;&#125;<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"message"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> vm = <span class="keyword">new</span> Vue(&#123;</span><br><span class="line">  el: <span class="string">"#app-6"</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    message: <span class="string">"Hello Vue!"</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h2><p>以上簡單記錄了 <a href="http://vue.org" target="_blank" rel="noopener">Vue.org</a> 介紹 vue.js 內容，介紹了 Vue.js 可以操作的功能，更多的內容會在之後繼續介紹，Bye ^^。</p><h2 id="資料來源"><a href="#資料來源" class="headerlink" title="資料來源"></a>資料來源</h2><p><a href="https://cn.vuejs.org/v2/guide/index.html" target="_blank" rel="noopener">Vue 官方文件（Ver.0.11 - Ver.2.x）</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在整理 vue 的筆記，也重新看了一遍 vue.org 加深印象以及釐清之前不懂的地方，以下為紀錄筆記，若有錯誤歡迎指正交流，謝謝 😆。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="vue" scheme="https://github.com/YUN-RU-TSENG/tags/vue/"/>
    
      <category term="vue.js" scheme="https://github.com/YUN-RU-TSENG/tags/vue-js/"/>
    
      <category term="note" scheme="https://github.com/YUN-RU-TSENG/tags/note/"/>
    
      <category term="front-end" scheme="https://github.com/YUN-RU-TSENG/tags/front-end/"/>
    
      <category term="vue.org" scheme="https://github.com/YUN-RU-TSENG/tags/vue-org/"/>
    
  </entry>
  
  <entry>
    <title>Mikrokosmos</title>
    <link href="https://github.com/YUN-RU-TSENG/archives/2020/06/Mikrokosmos/"/>
    <id>https://github.com/YUN-RU-TSENG/archives/2020/06/Mikrokosmos/</id>
    <published>2020-06-28T03:04:33.000Z</published>
    <updated>2020-07-04T10:33:28.131Z</updated>
    
    <content type="html"><![CDATA[<p>Mikrokosmos</p><p>reset 2020-06-28 03:04:33.</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Mikrokosmos&lt;/p&gt;
&lt;p&gt;reset 2020-06-28 03:04:33.&lt;/p&gt;

      
    
    </summary>
    
    
    
      <category term="reset" scheme="https://github.com/YUN-RU-TSENG/tags/reset/"/>
    
  </entry>
  
</feed>
